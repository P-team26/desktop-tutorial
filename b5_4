interface IEmployee{
    public int calculateSalary();
    public  String getName();
}
abstract class Employee implements IEmployee{
    private String name;
    private int paymentPerHour;
    public Employee(String name,int paymentPerHour){
        this.name=name;
        this.paymentPerHour=paymentPerHour;
    }
    public void setName(String name){
        this.name=name;
    }
    @Override
    public String getName(){
        return name;
    }
    public void setPaymentPerHour(int paymentPerHour){
        this.paymentPerHour=paymentPerHour;
    }
    public int getPaymentPerHour(){
        return paymentPerHour;
    } 
}
class PartTimeEmployee extends Employee{
    private int workingHours;
    public PartTimeEmployee(String name,int paymentPerHour,int workingHours){
        super(name,paymentPerHour);
        this.workingHours=workingHours;
    }
    @Override
    public int calculateSalary(){
        return workingHours*getPaymentPerHour();
    }
}
class FullTimeEmployee extends Employee{
    public FullTimeEmployee(String name,int paymentPerHour){
        super(name,paymentPerHour);
    }
    @Override
    public int calculateSalary(){
        return 8*getPaymentPerHour();
    }
}
