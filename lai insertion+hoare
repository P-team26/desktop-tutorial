
void insertion(int a[],int low,int high){
	for(int i=low+1;i<high+1;i++){
		int last=a[i];
		int j=i;
		while(j>0 && a[j-1]>last){
			a[j]=a[j-1];
			j--;
		}
		a[j]=last;
	}
}
int hoare(int a[],int low,int high){
	int pivot=a[low];
	int i=low-1;
	int j=high+1;
	while(true){
		do{
			i++;
		}while(a[i]<pivot);
		do{
			j--;
		}while(a[j]>pivot);
		if(i>=j){
			return j;
		}
		int tg=a[i];
		    a[i]=a[j];
		    a[j]=tg;
	}
}
void hybrid_quick_sort(int a[],int low,int high){
	while(low<high){
		if(high-low+1>0){
			insertion(a,low,high);
			break;
		}else{
			int pi=hoare(a,low,high);
			hybrid_quick_sort(a,low,pi);
		}
	}
}
