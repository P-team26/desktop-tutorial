void heapify(int a[],int n,int i){
	int largest=i;
	int left=2*i+1;
	int right=2*i+2;
	if(left<n && a[left]>a[largest]){
		largest=left;
	}
	if(right<n && a[right]>a[largest]){
		largest=right;
	}
	if(largest!=i){
		int tg=a[i];
		a[i]=a[largest];
		a[largest]=tg;
		heapify(a,n,largest);
	}
	
}
void heapsort(int a[],int n){
	for(int i=n/2-1;i>=0;i--){
		heapify(a,n,i);
	}
	for(int i=n-1;i>=0;i--){
		int tg=a[i];
		a[i]=a[0];
		a[0]=tg;
		heapify(a,i,0);
	}
}
//// tối ưu hơn
void pushup(int a[],int max){
	int par=(max-1)/2;
	for(int i=par;i>=0;i--){
		int tmp=2*i+1;
		if(2*i+2<=max&&a[tmp]<a[2*i+2]){
			tmp++;
		}
		if(a[tmp]>a[i]){
			int tg=a[tmp];
			a[tmp]=a[i];
			a[i]=tg;
        }  
	}
}
void heapsort(int a[],int n){
	for(int i=n-1;i>0;i--){ 
		pushup(a,i);   
		int tg=a[0];
		a[0]=a[i];
		a[i]=tg;
	}
}
